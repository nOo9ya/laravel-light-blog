version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: laravel_blog_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./storage/app/public:/var/www/html/public/storage
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - CACHE_DRIVER=file
      - SESSION_DRIVER=database
      - QUEUE_CONNECTION=database
    depends_on:
      - database
      - redis
    networks:
      - laravel_blog_network

  webserver:
    image: nginx:alpine
    container_name: laravel_blog_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites-available:/etc/nginx/sites-available
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - laravel_blog_network

  database:
    image: mariadb:10.11
    container_name: laravel_blog_mariadb
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    networks:
      - laravel_blog_network

  redis:
    image: redis:alpine
    container_name: laravel_blog_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_blog_network

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local

networks:
  laravel_blog_network:
    driver: bridge